// Price watcher
$(document).ready(function() {
  var adult = $('.js-adult')[0];
  var child = $('.js-child')[0];
  var infant = $('.js-infant')[0];
  var senior = $('.js-senior')[0];

  var updateSeats = function() {
    $('.js-seats').first().val(
      parseInt(adult.value) + parseInt(child.value) + parseInt(infant.value) + parseInt(senior.value)
    );
  }

  var updatePrice = function() {
    var totalPrice = 0.00;
    $('.js-hotel-room option:selected').each(function() {
      var room_price = 0;
      room_price += adult.value * parseInt($(this).data('price-adult'));
      room_price += child.value * parseInt($(this).data('price-child'));
      room_price += infant.value * parseInt($(this).data('price-infant'));
      room_price += senior.value * parseInt($(this).data('price-senior'));
      $(this).closest('.js-hotel-booking').find('.js-subtotal').text(
        '$' + room_price.toFixed(2)
      )

      totalPrice += room_price;
    })
    $('#js-total-price').text(
      '$' + totalPrice.toFixed(2)
    );
  }

  var updateSeatsAndPrice = function() {
    // updateSeats();
    updatePrice();
  }

  updateSeatsAndPrice();

  $('.js-adult').on('change', updateSeatsAndPrice);
  $('.js-child').on('change', updateSeatsAndPrice);
  $('.js-infant').on('change', updateSeatsAndPrice);
  $('.js-senior').on('change', updateSeatsAndPrice);
});



$(document).ready(function() {
  var firstSeatLabel = 1;

			$(document).ready(function() {
				var $cart = $('#selected-seats'),
					$counter = $('.js-seats').first(),
					$total = $('#coach-subtotal'),
					sc = $('#seat-map').seatCharts({
					map: [
						'ff_ff',
						'ff_ff',
						'ee_ee',
						'ee_ee',
						'ee___',
						'ee_ee',
						'ee_ee',
						'ee_ee',
						'eeeee',
					],
					seats: {
						f: {
							price   : 100,
							classes : 'first-class', //your custom CSS class
							category: 'First Class'
						},
						e: {
							price   : 40,
							classes : 'economy-class', //your custom CSS class
							category: 'Economy Class'
						}

					},
					naming : {
						top : false,
						getLabel : function (character, row, column) {
							return firstSeatLabel++;
						},
					},
					legend : {
						node : $('#legend'),
					    items : [
							[ 'f', 'available',   'First Class' ],
							[ 'e', 'available',   'Economy Class'],
							[ 'f', 'unavailable', 'Already Booked']
					    ]
					},
					click: function () {
						if (this.status() == 'available') {
							//let's create a new <li> which we'll add to the cart items
							$('<li>'+this.data().category+' Seat # '+this.settings.label+': <b>$'+this.data().price+'</b> <a href="#" class="cancel-cart-item">[cancel]</a></li>')
								.attr('id', 'cart-item-'+this.settings.id)
								.data('seatId', this.settings.id)
								.appendTo($cart);

							/*
							 * Lets update the counter and total
							 *
							 * .find function will not find the current seat, because it will change its stauts only after return
							 * 'selected'. This is why we have to add 1 to the length and the current seat price to the total.
							 */
							$counter.val(sc.find('selected').length+1);
              var newPrice = recalculateTotal(sc)+this.data().price;
							$total.text("$" + newPrice.toFixed(2));

							return 'selected';
						} else if (this.status() == 'selected') {
							//update the counter
							$counter.text(sc.find('selected').length-1);
							//and total
							$total.text(recalculateTotal(sc)-this.data().price);

							//remove the item from our cart
							$('#cart-item-'+this.settings.id).remove();

							//seat has been vacated
							return 'available';
						} else if (this.status() == 'unavailable') {
							//seat has been already booked
							return 'unavailable';
						} else {
							return this.style();
						}
					}
				});

				//this will handle "[cancel]" link clicks
				$('#selected-seats').on('click', '.cancel-cart-item', function () {
					//let's just trigger Click event on the appropriate seat, so we don't have to repeat the logic here
					sc.get($(this).parents('li:first').data('seatId')).click();
				});

				//let's pretend some seats have already been booked
				sc.get(['1_2', '4_1', '7_1', '7_2']).status('unavailable');

		});

		function recalculateTotal(sc) {
			var total = 0;

			//basically find every selected seat and sum its price
			sc.find('selected').each(function () {
				total += this.data().price;
			});

			return total;
		}


});
